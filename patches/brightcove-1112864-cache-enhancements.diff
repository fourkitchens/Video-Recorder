diff --git a/brightcove.module b/brightcove.module
index 46a49c6..a7ea919 100644
--- a/brightcove.module
+++ b/brightcove.module
@@ -36,7 +36,7 @@ function brightcove_menu() {
     'title' => 'Brightcove settings',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('brightcove_admin_settings'),
-    'type' => MENU_LOCAL_TASK,
+    'type' => MENU_NORMAL_ITEM,
     'access arguments' => array('administer brightcove settings'),
     'file' => 'brightcove.admin.inc',
   );
@@ -397,3 +397,43 @@ function brightcove_generate_reference($account = NULL) {
   }
   return "drupal:" . DRUPAL_CORE_COMPATIBILITY . ":" . $account . ":" . md5(microtime());
 }
+
+/**
+ * Caches the status of a video for faster validation.
+ *
+ * This function also helps work around the lag in Brightcove API when
+ * videos are uploaded.
+ *
+ * @param $id
+ *  The Brightcove identifier for the video.
+ *
+ * @param $video
+ *  The video object to be cached.
+ */
+function brightcove_cache_video($id, $video) {
+  if (!isset($_SESSION['brightcove'])) {
+    $_SESSION['brightcove'] = array();
+  }
+
+  $id = (int) $id;
+  $_SESSION['brightcove']["video_{$id}"] = $video;
+}
+
+/**
+ * Fetches a brighcove video object from the cache, if available.
+ *
+ * @param
+ *  The Brightcove identifier for the video.
+ *
+ * @return
+ *  Object the Brightcove video object.
+ */
+function brightcove_video_from_cache($id) {
+  $id = (int) $id;
+  $key = "video_{$id}"; 
+  if ($id && isset($_SESSION['brightcove'][$key])) {
+    return $_SESSION['brightcove'][$key];
+  }
+
+  return NULL;
+}
diff --git a/brightcove_cck/brightcove_cck.module b/brightcove_cck/brightcove_cck.module
index f8f2340..c15d8b9 100644
--- a/brightcove_cck/brightcove_cck.module
+++ b/brightcove_cck/brightcove_cck.module
@@ -181,7 +181,7 @@ function brightcove_cck_field($op, &$node, $field, &$items, $teaser, $page) {
             $video = brightcove_video_load($item['video_id']);
             if (empty($video->id)) {
               // Check for video in session - uploaded file.
-              if (!$_SESSION['video_' . $item['video_id']]) {
+              if (is_null(brightcove_video_from_cache($item['video_id']))) {
                 form_set_error($error_element, t('%name: invalid video.', array('%name' => t($field['widget']['label']))));
               }
             }
@@ -219,7 +219,7 @@ function brightcove_cck_browser_validate($element, &$form_state) {
     if (is_numeric($id)) {
       // Matched ID, check if the video exists.
       $video = brightcove_video_load($id);
-      if ($video->id != $id && !$_SESSION['video_' . $id]) {
+      if ($video->id != $id && is_null(brightcove_video_from_cache($id))) {
         form_error($element, t('%name: Found no valid video with that name. Please note that it might take several minutes after the video has been uploaded in Brightcove Studio to appear in the API.', array('%name' => t($field['widget']['label']))));
       }
     } else {
@@ -469,8 +469,8 @@ function brightcove_cck_browser_value($element, $edit = FALSE) {
     $video = brightcove_video_load($id);
     if ($video->id) {
       return array($field_key => check_plain($video->name) . ' [id:' . $video->id . ']');
-    } else if ($_SESSION['video_' . $id]) {
-      return array($field_key => check_plain($_SESSION['video_' . $id]->name) . ' [id:' . $id . ']');
+    } else if (!is_null(brightcove_video_from_cache($id))) {
+      return array($field_key => check_plain(brightcove_video_from_cache($id)->name) . ' [id:' . $id . ']');
     }
 
   }
@@ -871,7 +871,7 @@ function brightcove_cck_upload_form_submit($form, &$form_state) {
     $video = new StdClass;
     $video->id = $id;
     $video->name = $form_state['values']['title'];
-    $_SESSION['video_' . $id] = $video;
+    brightcove_cache_video($id, $video);
 
     db_query('DELETE FROM {files} WHERE fid = %d', $file->fid);
     unlink($file->filepath);
